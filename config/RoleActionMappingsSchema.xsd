<?xml version="1.0"?>
<!--
/*
* Copyright (C) 2015 STFC
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* http://www.apache.org/licenses/LICENSE-2.0
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
@author David Meredith 
--> 

<xs:schema targetNamespace="http://goc.egi.eu/2015/03/spec1.0_r1" 
           version="1.0"
           xmlns="http://www.w3.org/2001/XMLSchema"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:goc="http://goc.egi.eu/2015/03/spec1.0_r1" 
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"> 

    <xs:element name="RoleActionMappingRules">
        <annotation>
            <documentation>
        <![CDATA[
        <RoleActionMappingRules> is the root element. 
        It defines zero or more <RoleActionMapping>s, one for each project. 
        
        Each <RoleActionMapping> declares mappings between role names and the actions 
        they grant over the specified target object types.  
        
        If a <RoleActionMapping> is not specified for a particular project, 
        a single default <RoleActionMapping> MAY be defined as a fallback 
        (this default <RoleActionMapping> will define NO <TargetProject> element). 
        ]]>
            </documentation>
        </annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="goc:RoleActionMapping" minOccurs="0" maxOccurs="unbounded"></xs:element> 
            </xs:sequence>
        </xs:complexType> 
        <xs:unique name="testRoleActionMappingTargetProjectUnique">
            <xs:annotation>
                <xs:documentation>
                <![CDATA[ 
                Declares a unique constraint on the value of <TargetProject> 
                to ensure only ONE <RoleActionMapping> applies to a particular project. 
                ]]>
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath="goc:RoleActionMapping/goc:TargetProject"/>
            <xs:field xpath="."/>
        </xs:unique>
    </xs:element>
    
    <xs:element name="RoleActionMapping">
        <xs:annotation>
            <xs:documentation>
            <![CDATA[ 
            Defines the role-to-action mappings for a set of projects named by
            the nested <TargetProject> elements. The basic structure of the 
            element is as follows: 
            
            <RoleActionMapping> 
                <TargetProject/> (0..*) 
                <RoleNames/>     (0..*) 
                <RoleMapping/>   (0..*)   
            </RoleActionMapping> 
            
            ]]>
            </xs:documentation> 
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="TargetProject" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                <![CDATA[ 
                 Optional; used to name which project(s) this <RoleActionMapping> applies to. 
                 There can be only one <RoleActionMapping> that does not define any 
                 <TargetProject> elements, and this serves as the default. 
                ]]>
                        </xs:documentation> 
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <!--<xs:attribute name="value" type="xs:string"/>-->
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>  
                </xs:element>
                <xs:element ref="goc:RoleNames" minOccurs="0" maxOccurs="unbounded"></xs:element> 
                <xs:element ref="goc:RoleMapping" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <!--<xs:attribute name="forProjects" type="string"/>-->
        </xs:complexType> 
        <!-- 
        Ensure that Role values are unique within the context of any single RoleActionMapping. 
        This allows different RoleActionMapping elements to define the same Role values.   
        -->
        <xs:unique name="testRolesUniqueInRoleActionMapping">
            <xs:selector xpath="goc:RoleNames/goc:Role"/>
            <xs:field xpath="."/>
        </xs:unique>
        <!--<xs:unique name="testRoleAliasUniqueInRoleActionMapping">
            <xs:selector xpath="goc:RoleNames/goc:Role"/>
            <xs:field xpath="@alias"/>
        </xs:unique>-->
    </xs:element>

    <xs:element name="RoleNames">
        <xs:annotation>
            <xs:documentation>
            <![CDATA[ 
            Defines the role names that apply 'over' a specified object type by 
            nesting zero or more <Role> elements. 
            ]]>
            </xs:documentation> 
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Role" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                <![CDATA[ 
                Defines a role name as the element value, and an id attribute 
                that is used as a shortcut to reference this role name. 
                ]]>
                        </xs:documentation> 
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute name="id" type="xs:ID">
                                </xs:attribute>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element> 
            </xs:sequence>    
            <xs:attribute name="over" type="string"/>
        </xs:complexType> 
    </xs:element>
  
    <element name="RoleMapping">
        <xs:annotation>
            <xs:documentation>
                <![CDATA[
                Used to specify which roles enable a set of actions over the 
                specified target object(s), i.e. it actually defines 
                the role-to-action mapping. 
                ]]>
            </xs:documentation> 
        </xs:annotation>
        <complexType>
            <sequence>
                <!-- Inline Roles element -->
                <xs:element name="Roles">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="RoleRef" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:attribute name="idRef" type="xs:IDREF" use="required" />
                                </xs:complexType> 
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType> 
                </xs:element>
                <element name="EnabledActions" minOccurs="0" maxOccurs="unbounded">
                    <complexType>
                        <sequence>
                            <element name="Actions">
                                <xs:annotation>
                                    <xs:documentation>
                <![CDATA[ ]]>
                                    </xs:documentation> 
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="Action" minOccurs="0" maxOccurs="unbounded">
                                            <xs:simpleType>
                                                <xs:restriction base="xs:string">
                                                    <xs:pattern value="[a-zA-Z0-9_\s]+"/>
                                                </xs:restriction>
                                            </xs:simpleType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </element>
                            <element name="Target" minOccurs="1" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
                <![CDATA[ ]]>
                                    </xs:documentation> 
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:simpleContent>
                                        <xs:extension base="xs:string">
                                        </xs:extension>
                                    </xs:simpleContent>
                                </xs:complexType>  
                            </element>
                        </sequence>
                    </complexType> 
                </element>  
            </sequence> 
        </complexType>
    </element>

</xs:schema>
