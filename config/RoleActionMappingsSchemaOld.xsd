<?xml version="1.0"?>
<!--
/*
* Copyright (C) 2015 STFC
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* http://www.apache.org/licenses/LICENSE-2.0
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
--> 

<xs:schema targetNamespace="http://goc.egi.eu/2015/03/spec1.0_r1" 
           version="1.0"
           xmlns="http://www.w3.org/2001/XMLSchema"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:goc="http://goc.egi.eu/2015/03/spec1.0_r1" 
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"> 

    <xs:element name="RoleActionMappingRules">
        <annotation>
            <documentation>
        <![CDATA[
        This is the root element. It is used to define
        ]]>
            </documentation>
        </annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="goc:RoleActionMapping" minOccurs="0" maxOccurs="unbounded"></xs:element> 
            </xs:sequence>
        </xs:complexType> 
        <xs:unique name="testRoleActionMappingTargetProjectUnique">
            <xs:selector xpath="goc:RoleActionMapping/goc:TargetProject"/>
            <xs:field xpath="."/>
        </xs:unique>
    </xs:element>
    
    <xs:element name="RoleActionMapping">
        <xs:annotation>
            <xs:documentation>
                <![CDATA[ ]]>
            </xs:documentation> 
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="TargetProject" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                <![CDATA[ ]]>
                        </xs:documentation> 
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <!--<xs:attribute name="value" type="xs:string"/>-->
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>  
                </xs:element>
                <xs:element ref="goc:RoleNames" minOccurs="0" maxOccurs="unbounded"></xs:element> 
                <xs:element ref="goc:RoleMapping" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <!--<xs:attribute name="forProjects" type="string"/>-->
        </xs:complexType> 
        <!-- 
        Ensure that Role values are unique within the context of any single RoleActionMapping. 
        This allows different RoleActionMapping elements to define the same Role values.   
        -->
        <xs:unique name="testRolesUniqueInRoleActionMapping">
            <xs:selector xpath="goc:RoleNames/goc:Role"/>
            <xs:field xpath="."/>
        </xs:unique>
        <xs:unique name="testRoleAliasUniqueInRoleActionMapping">
            <xs:selector xpath="goc:RoleNames/goc:Role"/>
            <xs:field xpath="@alias"/>
        </xs:unique>
    </xs:element>

    <xs:element name="RoleNames">
        <xs:annotation>
            <xs:documentation>
                <![CDATA[ ]]>
            </xs:documentation> 
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Role" type="goc:Role_t" minOccurs="0" maxOccurs="unbounded"/> 
            </xs:sequence>    
            <xs:attribute name="over" type="string"/>
        </xs:complexType> 
    </xs:element>

  
    <xs:complexType name="Role_t">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="alias" type="xs:string">
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>


    <element name="RoleMapping" type="goc:RoleMapping_t">
        <xs:annotation>
            <xs:documentation>
                <![CDATA[ ]]>
            </xs:documentation> 
        </xs:annotation>
    </element>
    <complexType name="RoleMapping_t">
        <sequence>
            <!-- Inline Roles element -->
            <xs:element name="Roles">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <!--<xs:attribute name="value" type="xs:string"/>-->
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType> 
            </xs:element>
            <element name="EnabledActions" type="goc:EnabledActions_t" minOccurs="0" maxOccurs="unbounded"/>  
        </sequence> 
    </complexType>


    <complexType name="EnabledActions_t">
        <sequence>
            <element name="Actions">
                <xs:annotation>
                    <xs:documentation>
                <![CDATA[ ]]>
                    </xs:documentation> 
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <!--<xs:attribute name="value" type="xs:string"/>-->
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>  
            </element>
            <element name="Target" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                <![CDATA[ ]]>
                    </xs:documentation> 
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <!--<xs:attribute name="value" type="xs:string"/>-->
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>  
            </element>
        </sequence>
    </complexType>

</xs:schema>
